PTXDIST_VERSION := `grep CONFIGFILE_VERSION configs/ptxconfig | cut -d = -f2 | sed 's/"//g'`
PTXDIST_PLATFORM := "configs" + "/platform-" + env_var('PLATFORM') + "/" + "platformconfig"
TOOLCHAIN_VERSION := `grep CROSSCHAIN_VENDOR configs/platform-$PLATFORM/platformconfig | cut -d = -f2 | sed 's/"//g' | tr '[:upper:]' '[:lower:]'`
CACHE := "ptxdist-" + PTXDIST_VERSION + "-build-env-arm-multi." + TOOLCHAIN_VERSION
TAG := "latest"
POD := env_var('PODMAN')
PODFLAGS := env_var('PODMANFLAGS')

alias b := build

cmd := 'bash -i'

platform:
    #!/usr/bin/env bash
    files=$(shopt -s nullglob dotglob; echo configs/platform-*)
    if (( ${#files} )); then
      PLATFORM=$(dialog --clear \
                      --stdout \
                      --title "Select Platform" \
                      --fselect configs/ 20 70)
    fi
    echo $PLATFORM

@pull:
    {{POD}} pull ghcr.io/strumtrar/{{CACHE}}:{{TAG}}

@build:
    podman build -q -t ghcr.io/strumtrar/{{CACHE}}:{{TAG}} --layers --cache-from ghcr.io/strumtrar/{{CACHE}} --build-arg=PTXDIST_VERSION={{PTXDIST_VERSION}} --build-arg=TOOLCHAIN_VERSION={{TOOLCHAIN_VERSION}} $PRJ_ROOT/build-envs/ptxdist-build-env

@connect *command=cmd: pull
    cd {{invocation_directory()}} && \
    podman run --rm -it --userns=keep-id \
    --workdir /bsp \
    --volume "$(pwd)":/bsp \
    --volume ~/work/ptxdist/src:/bsp/src \
    --network=host \
    {{CACHE}}:{{TAG}} \
    {{command}}

ptxdist *parameters:
    cd {{invocation_directory()}} && \
    just connect ptxdist {{parameters}}

ptxdist-platform:
    cd {{invocation_directory()}} && \
    just ptxdist platform {{PTXDIST_PLATFORM}}
