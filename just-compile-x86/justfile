CACHE := "build-env-x86.debian.12.1-slim"
TAG := "latest"
USER_SRC := `whoami`
USER_DEST := "str"
ARCH := env_var('ARCH')
POD := env_var('PODMAN')
PODFLAGS := env_var('PODMANFLAGS')
PROJ := `if [[ -e .kernel ]]; then echo kernel; else echo barebox; fi`
HOOKS := "$PRJ_ROOT/justfiles/just-hooks"
CONFIG := "$PRJ_ROOT/justfiles/just-config"
ROOT := env_var('PRJ_ROOT')

alias b := build
alias c := compile
alias r := rsync

cmd := 'bash -i'

default: compile

@pull:
    {{POD}} pull ghcr.io/strumtrar/{{CACHE}}:{{TAG}}

build:
    {{POD}} build -t ghcr.io/strumtrar/{{CACHE}}:{{TAG}} --layers --cache-from ghcr.io/strumtrar/{{CACHE}} {{ROOT}}/build-envs/x86

config-hook:
    #!/usr/bin/env bash
    set -x
    PWD="{{invocation_directory()}}"
    just -f {{CONFIG}} _saveconfig 

builddir-hook:
    #!/usr/bin/env bash
    set -x
    PWD="{{invocation_directory()}}"
    just -f {{CONFIG}} _create-builddir 

@_connect flags="--rm" *command=cmd: pull builddir-hook
    cd {{invocation_directory()}} && \
    {{POD}} run {{flags}} -it \
    {{PODFLAGS}} \
    -e ARCH=$ARCH \
    --workdir /{{ PROJ }} \
    --volume "$(pwd)"/build:/build \
    --volume "$(pwd)":/{{ PROJ }} \
    {{CACHE}}:{{TAG}} \
    {{command}}

@connect *command=cmd:
    cd {{invocation_directory()}} && \
    just _connect --rm {{command}}

@objdump *parameters:
    cd {{invocation_directory()}} && \
    just connect ${CROSS_COMPILE}objdump -D {{parameters}}

pre-compile-hook:
    #!/usr/bin/env bash
    PWD="{{invocation_directory()}}"
    if [[ $PWD =~ .*kernel*. ]]; then
        just -f $PRJ_ROOT/justfiles/just-hooks pre-kernel 
    elif [[ $PWD =~ .*barebox*. ]]; then
        just -f $PRJ_ROOT/justfiles/just-hooks pre-barebox
    fi

post-compile-hook:
    #!/usr/bin/env bash
    PWD="{{invocation_directory()}}"
    if [[ $PWD =~ .*kernel*. ]]; then
        just -f {{HOOKS}} post-kernel
    elif [[ $PWD =~ .*barebox*. ]]; then
        just -f {{HOOKS}} post-barebox
    fi
    
post-rsync-hook:
    just -f {{HOOKS}} post-rsync

compile target="container" *parameters="": pre-compile-hook && config-hook post-compile-hook
    #!/usr/bin/env bash
    PWD="{{invocation_directory()}}"
    cd $PWD
    if [[ {{target}} =~ .*container*. ]]; then
        just connect make O=/build -j$(nproc) {{parameters}}
        just connect make O=/build -j$(nproc) compile_commands.json
    else
        ARCH={{ARCH}} make O=build -j$(nproc) {{parameters}}
        ARCH={{ARCH}} make O=build -j$(nproc) compile_commands.json
    fi
    notify-send -i ~/cfg/x/builder.png "Compilation done"

rsync: compile
    #!/usr/bin/env bash
    PWD="{{invocation_directory()}}"
    if [[ $PWD =~ .*kernel*. ]]; then
        rsync -avz {{invocation_directory()}}/build/$KERNELIMAGE $LG_PROXY:/home/str/work/customers/ptx/DistroKit/platform-x86_64/root/root/{{USER_DEST}}-linux-$HOSTNAME
        rsync -avz {{invocation_directory()}}/build/$KERNELIMAGE $LG_PROXY:/tftpboot/{{USER_DEST}}-linux-$HOSTNAME
    elif [[ $PWD =~ .*barebox*. ]]; then
        rsync -avz {{invocation_directory()}}/build/$BAREBOXIMAGE $LG_PROXY:/tftpboot/{{USER_DEST}}-barebox-$HOSTNAME
    fi
